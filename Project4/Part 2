import numpy as np
import matplotlib.pyplot as plt

pairs = []
filename = "pdunbar_orderedPairs.txt" #PLEASE CHANGE TO YOUR FILE NAME, assumed input is a X by 2 matrix of pairs

def createMatX(pairs):
  #creates the empty matrix X
  pairsNP = np.array(pairs)
  dimensions = pairsNP.shape
  rows, cols = dimensions
  x = np.zeros((rows, cols))

  #Fills first coloumn with 1s
  x[:, 0] = 1

  #Fills second coloumn with the first coloumn of pairs
  x[:, 1] = pairsNP[:, 0]

  return x
  
def createMatY(pairs):
  #creates the empty matrix Y
  pairsNP = np.array(pairs)
  dimensions = pairsNP.shape
  rows, cols = dimensions
  y = np.zeros((rows, cols-1))

  #Fills the first coloumn with the second coloumn of pairs
  y[:, 0] = pairsNP[:, 1]
  return y

def findXTX(x):
  xT = np.transpose(x)
  xTx = np.matmul(xT,x)
  return xTx

def findXTY(x,y):
  xT = np.transpose(x)
  xTy = np.matmul(xT,y)
  return xTy

def findLeastsquares(xTx,xTy):
  xTxInv = np.linalg.inv(xTx)
  leastSqrs = np.matmul(xTxInv,xTy)
  print(leastSqrs)
  return leastSqrs

def plotGraph(leastSqrs):
  #All points given
  plt.plot([25, 30, 35, 40], [82, 30, 35, 40], 'o')

  #equation of a line
  x = np.linspace(25, 40, 100)
  hold1 = leastSqrs[0]
  hold2 = leastSqrs[1]
  y = hold1 + hold2*x
  plt.plot(x,y)
  
  plt.show()

#grabs the user input for the matrix of pairs
with open(filename, 'r') as file:
  lines = file.readlines()
  for line in lines:
      numbers = list(map(float, line.split()))
      pairs.append(numbers)

x = createMatX(pairs)
y = createMatY(pairs)
xTx = findXTX(x)
xTy = findXTY(x,y)
leastSqrs = findLeastsquares(xTx,xTy)
plotGraph(leastSqrs)
