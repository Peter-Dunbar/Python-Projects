import numpy as np
import scipy as si

# creates Augmented matrix
def createAugmentedMatrix(flow1, flow2, flow3, flow4):
    constraint = [
        [0, 0, 1, -1],
        [0, 1, -1, 0],
        [1, -1, 0, 0],
        [1, 0, 0, -1]
    ]
    augMat = []
    for i in range(len(constraint)):
        augMat.append(constraint[i] + [eval(f'flow{i + 1}')])
    return augMat

# grabs all input from user
flow1 = float(input("Enter Flow 1: "))
flow2 = float(input("Enter Flow 2: "))
flow3 = float(input("Enter Flow 3: "))
flow4 = float(input("Enter Flow 4: "))

augMat = createAugmentedMatrix(flow1, flow2, flow3, flow4)


pl, solution = si.linalg.lu(augMat, permute_l = True)

print("Solution:")
for row in solution:
    print(row)
