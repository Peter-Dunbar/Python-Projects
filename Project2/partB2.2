import numpy as np

# creates Augmented matrix
def createAugmentedMatrix(flow1, flow2, flow3, flow4):
    constraint = [
        [0, 0, 1, -1],
        [0, 1, -1, 0],
        [1, -1, 0, 0],
        [1, 0, 0, -1]
    ]
    augMat = []
    for i in range(len(constraint)):
        augMat.append(constraint[i] + [eval(f'flow{i + 1}')])
    return augMat

# grabs all input from user
flow1 = float(input("Enter Flow 1: "))
flow2 = float(input("Enter Flow 2: "))
flow3 = float(input("Enter Flow 3: "))
flow4 = float(input("Enter Flow 4: "))

augMat = createAugmentedMatrix(flow1, flow2, flow3, flow4)

# splits Aug matrix up so that it can be input into .solve
coeff = p.array([row[:-1] for row in augMat])
const = np.array([row[-1] for row in augMat])
solution = np.linalg.solve(coeff, const)

print("Solution:")
print(solution)
